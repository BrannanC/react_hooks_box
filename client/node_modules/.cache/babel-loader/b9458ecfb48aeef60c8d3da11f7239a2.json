{"ast":null,"code":"import Web3 from \"web3\";\n\nconst getWeb3 = () => {\n  console.log(\"asdf\");\n  console.log(\"window.web3\");\n\n  if (window.web3) {\n    // MetaMask - set to false for localhost\n    // Use Mist/MetaMask's provider.\n    const web3 = new Web3(window.web3.currentProvider);\n    console.log(\"Injected web3 detected.\");\n    return web3;\n  } // Fallback to localhost; use dev console port by default...\n  else {\n      const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\");\n      const web3 = new Web3(provider);\n      console.log(\"No web3 instance injected, using Local web3.\");\n      return web3;\n    }\n};\n\nexport default getWeb3;","map":{"version":3,"sources":["/Users/beacon/lambda/pmgroup/game_testing/client/src/utils/getWeb3.js"],"names":["Web3","getWeb3","console","log","window","web3","currentProvider","provider","providers","HttpProvider"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,MAAIC,MAAM,CAACC,IAAX,EAAiB;AACf;AACA;AACA,UAAMA,IAAI,GAAG,IAAIL,IAAJ,CAASI,MAAM,CAACC,IAAP,CAAYC,eAArB,CAAb;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,WAAOE,IAAP;AACD,GAND,CAOA;AAPA,OAQK;AACH,YAAME,QAAQ,GAAG,IAAIP,IAAI,CAACQ,SAAL,CAAeC,YAAnB,CAAgC,uBAAhC,CAAjB;AACA,YAAMJ,IAAI,GAAG,IAAIL,IAAJ,CAASO,QAAT,CAAb;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACA,aAAOE,IAAP;AACD;AACF,CAjBD;;AAkBA,eAAeJ,OAAf","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () => {\n  console.log(\"asdf\");\n  console.log(\"window.web3\");\n  if (window.web3) {\n    // MetaMask - set to false for localhost\n    // Use Mist/MetaMask's provider.\n    const web3 = new Web3(window.web3.currentProvider);\n    console.log(\"Injected web3 detected.\");\n    return web3;\n  }\n  // Fallback to localhost; use dev console port by default...\n  else {\n    const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\");\n    const web3 = new Web3(provider);\n    console.log(\"No web3 instance injected, using Local web3.\");\n    return web3;\n  }\n};\nexport default getWeb3;\n"]},"metadata":{},"sourceType":"module"}