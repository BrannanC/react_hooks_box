{"ast":null,"code":"import Web3 from \"web3\";\n\nconst getWeb3 = () => console.log('asdf');\n\nconsole.log('window.web3');\n\nif (window.web3) {\n  // MetaMask - set to false for localhost\n  // Use Mist/MetaMask's provider.\n  const web3 = new Web3(window.web3.currentProvider);\n  console.log(\"Injected web3 detected.\");\n  resolve(web3);\n} // Fallback to localhost; use dev console port by default...\nelse {\n    const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\");\n    const web3 = new Web3(provider);\n    console.log(\"No web3 instance injected, using Local web3.\");\n    resolve(web3);\n  }\n\n;\nexport default getWeb3;","map":{"version":3,"sources":["/Users/beacon/lambda/pmgroup/game_testing/client/src/utils/getWeb3.js"],"names":["Web3","getWeb3","console","log","window","web3","currentProvider","resolve","provider","providers","HttpProvider"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,OAAO,GAAG,MACZC,OAAO,CAACC,GAAR,CAAY,MAAZ,CADJ;;AAEMD,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACC,IAAIC,MAAM,CAACC,IAAX,EAAiB;AAAE;AAClB;AACA,QAAMA,IAAI,GAAG,IAAIL,IAAJ,CAASI,MAAM,CAACC,IAAP,CAAYC,eAArB,CAAb;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAI,EAAAA,OAAO,CAACF,IAAD,CAAP;AACD,CALA,CAMD;AANC,KAOI;AACH,UAAMG,QAAQ,GAAG,IAAIR,IAAI,CAACS,SAAL,CAAeC,YAAnB,CACf,uBADe,CAAjB;AAGA,UAAML,IAAI,GAAG,IAAIL,IAAJ,CAASQ,QAAT,CAAb;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACAI,IAAAA,OAAO,CAACF,IAAD,CAAP;AACD;;AACP;AAEA,eAAeJ,OAAf","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n    console.log('asdf')\n      console.log('window.web3')\n       if (window.web3) { // MetaMask - set to false for localhost\n        // Use Mist/MetaMask's provider.\n        const web3 = new Web3(window.web3.currentProvider);\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:7545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n;\n\nexport default getWeb3;\n"]},"metadata":{},"sourceType":"module"}